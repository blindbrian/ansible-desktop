[core]
	editor = nano --const --guidestripe 81

[color]
	status = auto
	diff = auto
	branch = auto
	interactive = auto

[pretty]
	simple = format:%Cred%h%Creset -%C(yellow)%d%Creset %s %C(blue)[%an] %Cgreen(%ar)
	verbose = format:%Cred%h%Creset -%C(yellow)%d%Creset %s %C(blue)[%an] %Cgreen(%ar) %Creset-- %C(cyan)[%cn] %C(magenta)(%cr)%Creset

[alias]
	st = status -s -b
	br = branch
	cp = cherry-pick
	co = checkout
	cl = clone
	df = diff --color-words
	dc = diff --color-words --cached
	ci = commit
	cia = commit -a
	ciaa = commit -a --amend
	logout = user --logout
	unstage = reset HEAD --

	tree = log --graph --pretty=simple --abbrev-commit --date=relative
	lol = log --graph --pretty=simple --abbrev-commit --date=relative
	lola = log --graph --pretty=simple --abbrev-commit --date=relative --all
	# based on https://github.com/mahiro/git-stuff/blob/master/bin/git-log-graph-dump
	lolaa = !sh -c 'git lola $(git fsck --unreachable --no-reflogs 2>/dev/null | sed -n \"s/^\\w\\w* commit //p\")'

	# from https://git.wiki.kernel.org/index.php/Aliases
	serve = !git daemon --reuseaddr --verbose  --base-path=. --export-all --enable=receive-pack --informative-errors

	# pushes a new branch to origin
	publish = !sh -c 'git push -u origin $(git rev-parse --abbrev-ref HEAD)'

	# list all commits that have not yet been pushed to the upstream branch
	pending = !sh -c 'git lol $(git config branch.$(git name-rev --name-only HEAD).remote)/$(git rev-parse --abbrev-ref --symbolic-full-name $(git config branch.$(git name-rev --name-only HEAD).merge))..HEAD'

	# Forcibly reset the current branch to the latest version of its upstream.
	# This is useful if the upstream has diverged from the local branch because of a rebase.
	pull-f = !sh -c 'git fetch && git reset --hard $(git rev-parse --abbrev-ref --symbolic-full-name @{u})'

[push]
	default = simple

[http]
	sslVerify = true

[user]
	email = {{ git_email }}
	name = Brian Eccles

{% if git_credentials is defined %}
	{% for cred in git_credentials -%}

[credential "{{ cred.url }}"]
	username = {{ cred.username }}
	helper = {{ cred.helper }}

	{% endfor %}
{% endif %}
